Q ::= find ( P ApL )
Q ::= aggregate ( SL )
P ::= true
P ::= elemmatch ( ap ( attrName ) P )
P ::= and ( P P )
P ::= or ( P P )
P ::= exists ( ap ( attrName ) )
P ::= in ( ap ( attrName ) Array )
P ::= lop ( LOC CE CE )
P ::= not ( P )
E ::= CE
E ::= AE
CE ::= ap ( attrName )
CE ::= size ( ap ( attrName ) )
CE ::= type ( ap ( attrName ) )
CE ::= Value
AE ::= substr ( ap ( attrName ) IntLiteral IntLiteral )
AE ::= bop ( BOC E E )
AE ::= uop ( UOC E )
AE ::= filter ( CE P StringLiteral IntLiteral )
Value ::= Array
Value ::= BoolLiteral
Value ::= FloatLiteral
Value ::= IntLiteral
Value ::= StringLiteral
Value ::= null
Value ::= ISODate
Value2 ::= BoolLiteral
Value2 ::= FloatLiteral
Value2 ::= IntLiteral
Value2 ::= StringLiteral
Value2 ::= null
Value2 ::= ISODate
Array ::= emptyList
Array ::= list ( ValueL )
BOC ::= add
BOC ::= sub
BOC ::= mul
BOC ::= div
BOC ::= mod
UOC ::= abs
UOC ::= ciel
UOC ::= min
UOC ::= max
UOC ::= avg
UOC ::= sum
UOC ::= count
LOC ::= eq
LOC ::= ne
LOC ::= lt
LOC ::= lte
LOC ::= gt
LOC ::= gte
S ::= count ( StringLiteral )
S ::= limit ( IntLiteral )
S ::= skip ( IntLiteral )
S ::= match ( P )
S ::= unwind ( ap ( attrName ) )
S ::= group ( ApL EL NewApL )
S ::= project ( ApL EL NewApL )
S ::= sort ( EL EL )
EL ::= empty
EL ::= cons ( E EL )
CEL ::= empty
CEL ::= cons ( CE CEL )
SL ::= empty
SL ::= cons ( S SL )
ValueL ::= Value Value2
ApL ::= empty
ApL ::= cons ( ap ( attrName ) ApL )
NewApL ::= empty
NewApL ::= cons ( ap ( newAttrName ) ApL )
BoolLiteral ::= trueValue
BoolLiteral ::= falseValue
IntLiteral ::= int ( -1 )
IntLiteral ::= int ( 0 )
IntLiteral ::= int ( 1 )
IntLiteral ::= int ( 2 )
IntLiteral ::= int ( 3 )
IntLiteral ::= int ( 4 )
IntLiteral ::= int ( 6 )
IntLiteral ::= int ( 20 )
IntLiteral ::= int ( 1975 )
FloatLiteral ::= float ( 0.1 )
FloatLiteral ::= float ( 0.2 )
FloatLiteral ::= float ( 0.3 )
FloatLiteral ::= float ( 0.4 )
StringLiteral ::= str ( object )
StringLiteral ::= str ( array )
StringLiteral ::= str ( countOfDistinctCountries )
StringLiteral ::= str (  )
ISODate ::= isodate ( 2021-02-25T10:03:46.000Z )
ISODate ::= isodate ( 2010-04-29T00:00:00.000Z )
ISODate ::= isodate ( 2010-05-01T00:00:00.000Z )