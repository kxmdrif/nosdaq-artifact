Q ::= find ( P CEL )
Q ::= aggregate ( SL )
P ::= true
P ::= allmatch ( ap ( attrName ) P )
P ::= elemmatch ( ap ( attrName ) P )
P ::= and ( P P )
P ::= or ( P P )
P ::= exists ( ap ( attrName ) )
P ::= in ( ap ( attrName ) Value )
P ::= lop ( LOC E E )
P ::= not ( P )
E ::= CE
E ::= AE
CE ::= ap ( attrName )
CE ::= size ( ap ( attrName ) )
CE ::= type ( ap ( attrName ) )
CE ::= Value
CE ::= substr ( ap ( attrName ) Value Value )
AE ::= bop ( BOC E E )
AE ::= uop ( UOC E )
AE ::= filter ( CE P Value Value )
Value ::= emptyList
Value ::= list ( ValueL )
Value ::= BoolLiteral
Value ::= FloatLiteral
Value ::= IntLiteral
Value ::= StringLiteral
Value ::= NullLiteral
Value ::= ISODate
Value2 ::= BoolLiteral
Value2 ::= FloatLiteral
Value2 ::= IntLiteral
Value2 ::= StringLiteral
Value2 ::= NullLiteral
Value2 ::= ISODate
BOC ::= add
BOC ::= sub
BOC ::= mul
BOC ::= div
BOC ::= mod
UOC ::= abs
UOC ::= ciel
UOC ::= min
UOC ::= max
UOC ::= avg
UOC ::= sum
UOC ::= count
LOC ::= eq
LOC ::= ne
LOC ::= lt
LOC ::= lte
LOC ::= gt
LOC ::= gte
S ::= count ( Value )
S ::= limit ( Value )
S ::= skip ( Value )
S ::= match ( P )
S ::= unwind ( ap ( attrName ) )
S ::= group ( ApL EL ApL )
S ::= project ( ApL EL ApL )
S ::= sort ( EL EL )
EL ::= empty
EL ::= cons ( E EL )
CEL ::= empty
CEL ::= cons ( CE CEL )
SL ::= empty
SL ::= cons ( S SL )
ValueL ::= Value2 ValueL
ApL ::= empty
ApL ::= cons ( ap ( attrName ) ApL )
BoolLiteral ::= trueValue
BoolLiteral ::= falseValue
IntLiteral ::= int ( 0 )
IntLiteral ::= int ( 1 )
IntLiteral ::= int ( 2 )
IntLiteral ::= int ( 3 )
FloatLiteral ::= float ( 0.1 )
FloatLiteral ::= float ( 0.2 )
FloatLiteral ::= float ( 0.3 )
FloatLiteral ::= float ( 0.4 )
StringLiteral ::= str ( "" )
NullLiteral ::= null
ISODate ::= isodate ( 2020-05-18T14:10:30Z )